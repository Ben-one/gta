// Generated by CoffeeScript 1.6.3
(function() {
  var Gta, exports,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  exports = exports || this;

  Gta = (function() {
    function Gta(options) {
      var Provider, option, provider;
      this.options = options;
      this.providers = {};
      for (provider in options) {
        option = options[provider];
        Provider = Gta["" + (provider[0].toUpperCase()) + provider.slice(1)];
        if (Provider != null) {
          this.providers[provider] = new Provider(option);
        }
      }
    }

    Gta.prototype.pageview = function() {
      var name, provider, _ref;
      _ref = this.providers;
      for (name in _ref) {
        provider = _ref[name];
        provider.pageview.apply(provider, arguments);
      }
      return this;
    };

    Gta.prototype.event = function() {
      var name, provider, _ref;
      _ref = this.providers;
      for (name in _ref) {
        provider = _ref[name];
        provider.event.apply(provider, arguments);
      }
      return this;
    };

    Gta.appendScript = function(script) {
      var dom, head, text;
      dom = document.createElement('script');
      text = document.createTextNode(script);
      dom.appendChild(text);
      head = document.getElementsByTagName('head')[0];
      return head.appendChild(dom);
    };

    Gta.Base = (function() {
      function Base(option) {
        this.option = option;
        this.option.account = option.account || '';
        this._q = this._initial();
      }

      Base.prototype._initial = function() {};

      Base.prototype.pageview = function() {
        var args, i, val;
        args = (function() {
          var _results;
          _results = [];
          for (i in arguments) {
            val = arguments[i];
            _results.push(val);
          }
          return _results;
        }).apply(this, arguments);
        this._q.push(['_trackPageview', args.join('_')]);
        return this;
      };

      Base.prototype.event = function() {
        var args, i, val;
        args = (function() {
          var _results;
          _results = [];
          for (i in arguments) {
            val = arguments[i];
            _results.push(val);
          }
          return _results;
        }).apply(this, arguments);
        return this._q.push(['_trackEvent', args[0], args[1], args.slice(2).join('_')]);
      };

      return Base;

    })();

    Gta.Google = (function(_super) {
      __extends(Google, _super);

      function Google(option) {
        Google.__super__.constructor.apply(this, arguments);
        if (this.option.domain != null) {
          this._q.push(['_setDomainName', this.option.domain]);
        }
      }

      Google.prototype._initial = function() {
        if (window._gaq == null) {
          Gta.appendScript("var _gaq = _gaq || [];\n_gaq.push(['_setAccount', '" + this.option.account + "']);\n_gaq.push(['_trackPageview']);\n(function() {\n  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n})();");
        }
        return window._gaq;
      };

      return Google;

    })(Gta.Base);

    Gta.Baidu = (function(_super) {
      __extends(Baidu, _super);

      function Baidu(option) {
        Baidu.__super__.constructor.apply(this, arguments);
      }

      Baidu.prototype._initial = function() {
        if (window._hmt == null) {
          Gta.appendScript("var _hmt = _hmt || [];\n_hmt.push(['_setAccount', '" + this.option.account + "']);");
        }
        return window._hmt;
      };

      return Baidu;

    })(Gta.Base);

    return Gta;

  })();

  exports.Gta = Gta;

}).call(this);
